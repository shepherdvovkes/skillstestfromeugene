name: Dependency Update & Security Scan

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual trigger

jobs:
  # Check for outdated dependencies
  check-dependencies:
    name: Check Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for outdated packages
        run: npm outdated || true

      - name: Create dependency report
        run: |
          echo "## Dependency Update Report" > dependency-report.md
          echo "Generated on $(date)" >> dependency-report.md
          echo "" >> dependency-report.md
          echo "### Outdated Dependencies:" >> dependency-report.md
          npm outdated --json | jq -r 'to_entries[] | "**\(.key):** \(.value.current) â†’ \(.value.latest)"' >> dependency-report.md || echo "No outdated dependencies found" >> dependency-report.md

      - name: Upload dependency report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-report
          path: dependency-report.md
          retention-days: 30

  # Security scanning
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=moderate

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  # Create issue for manual review
  create-update-issue:
    name: Create Update Issue
    runs-on: ubuntu-latest
    needs: [check-dependencies, security-scan]
    if: always()
    steps:
      - name: Create issue for dependency updates
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let report = '';
            
            try {
              report = fs.readFileSync('dependency-report.md', 'utf8');
            } catch (error) {
              report = 'No dependency report available';
            }
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸ”„ Weekly Dependency Update Review',
              body: `## Weekly Dependency Update Report
              
              ${report}
              
              ---
              
              **Next Steps:**
              - [ ] Review outdated dependencies
              - [ ] Test updates in development
              - [ ] Update dependencies if safe
              - [ ] Close this issue when complete
              
              *This issue was automatically generated by the CI/CD pipeline.*`,
              labels: ['dependencies', 'automated', 'weekly']
            });
