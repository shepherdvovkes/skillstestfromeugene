name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Build application
        run: npm run build

      - name: Generate changelog
        id: changelog
        run: |
          # Get the previous tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          
          if [ -z "$PREVIOUS_TAG" ]; then
            # If no previous tag, get all commits
            CHANGELOG=$(git log --oneline --no-merges)
          else
            # Get commits between previous tag and current tag
            CHANGELOG=$(git log --oneline --no-merges ${PREVIOUS_TAG}..HEAD)
          fi
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## What's Changed
            
            ${{ steps.changelog.outputs.changelog }}
            
            ## Installation
            
            ```bash
            npm install
            ```
            
            ## Development
            
            ```bash
            npm run dev
            ```
            
            ## Build
            
            ```bash
            npm run build
            npm start
            ```
          draft: false
          prerelease: false

      - name: Build and push Docker image
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_REGISTRY }}/blockchain-wallet-demo:${{ github.ref_name }}
            ${{ secrets.DOCKER_REGISTRY }}/blockchain-wallet-demo:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  notify-release:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Notify release
        run: |
          echo "Release ${{ github.ref }} has been created successfully!"
          echo "Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}"
